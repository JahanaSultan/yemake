# Generated by Django 4.0.6 on 2022-10-18 21:58

from django.db import migrations, models
import django.db.models.deletion
import django_quill.fields
import embed_video.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0010_remove_profile_bio'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('image', models.ImageField(null=True, upload_to='Category')),
                ('slug', models.SlugField(editable=False, null=True, unique=True, verbose_name='Slug')),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1500, verbose_name='Başlıq')),
                ('description', django_quill.fields.QuillField(verbose_name='Açıqlama')),
                ('image', models.ImageField(blank=True, default='Recipes/default.jpg', null=True, upload_to='Recipes', verbose_name='Şəkil')),
                ('isActive', models.BooleanField(default=False, verbose_name='Aktivlik')),
                ('slug', models.SlugField(editable=False, null=True, unique=True, verbose_name='Slug')),
                ('cook_time', models.IntegerField(null=True, verbose_name='Bişirilmə Vaxtı')),
                ('time', models.CharField(choices=[('saniyə', 'saniyə'), ('dəqiqə', 'dəqiqə'), ('saat', 'saat'), ('gün', 'gün')], default='dəqiqə', max_length=10, null=True, verbose_name='Zaman Ölçüsü')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Yaradılma Vaxtı')),
                ('youtube_link', embed_video.fields.EmbedVideoField(blank=True, null=True, verbose_name='Youtube Linki')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.category', verbose_name='Kateqoriya')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.profile', verbose_name='Postu Paylaşan')),
            ],
            options={
                'verbose_name': 'Resept',
                'verbose_name_plural': 'Reseptlər',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(choices=[('up', 'up vote'), ('down', 'down vote')], max_length=200)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.blog')),
            ],
            options={
                'unique_together': {('owner', 'recipe')},
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.blog')),
            ],
            options={
                'ordering': ['-created'],
                'unique_together': {('owner', 'recipe')},
            },
        ),
        migrations.CreateModel(
            name='RecipeBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
                ('recipe', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='recipes.blog')),
            ],
            options={
                'unique_together': {('owner', 'recipe')},
            },
        ),
    ]
